#include <bits/stdc++.h> 
 void prepadj(unordered_map<int,set<int>>&adj,vector<pair<int, int>> edges){
    for(int i=0;i<edges.size();i++){
        int u=edges[i].first;
        int v= edges[i].second;

        adj[u].insert(v);
        adj[v].insert(u);
    }
}

void bfs(unordered_map<int,set<int>>&adj,vector<int>&ans,unordered_map<int,bool>&vis,int node){
    queue<int>q;
    q.push(node);
    vis[node]=1;
    while(!q.empty()){
        int frontnode=q.front();
        q.pop();
        ans.push_back(frontnode);

        for(auto i:adj[frontnode]){
            if(!vis[i]){
                q.push(i);
            }
            vis[i]=1;
        }
    }
}



vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    vector<int>ans;
    unordered_map<int,set<int>>adj;
    unordered_map<int,bool>vis;

    prepadj(adj,edges);
    for(int i=0;i<vertex;i++){
        if(!vis[i]){
            bfs(adj,ans,vis,i);
        }
    }
    return ans;
}

#include <bits/stdc++.h> 
int solve(string s, string t){
	vector<vector<int>>dp(s.length()+1,vector<int>(t.length()+1,0));
	
	for(int i=s.length()-1;i>=0;i--){
		for(int j =t.length()-1;j>=0;j--){
				int ans=0;
				if(s[i]==t[j]) {
				ans= 1+dp[i+1][j+1];
				}
				else{
					ans=max(dp[i+1][j],dp[i][j+1]);
	} dp[i][j]=ans;
		}
	} return dp[0][0] ;
}

   
int longestPalindromeSubsequence(string s)
{
    string rev=s;
    reverse(rev.begin(),rev.end());
    int ans= solve(s,rev);
    return ans;
}


class Solution{
    public:
    
    pair<bool,int> balancefast(TreeNode *root){
        if(root ==NULL){
            pair<bool,int>p=make_pair(true,0);
            return p;
        }
        pair<int,int> left =balancefast(root->left);
        pair<int,int>right =balancefast(root->right);
        
        bool lefti=left.first;
        bool righti=right.first;
        bool diff =abs(left.second-right.second)<=1;
        pair<bool,int>ans;
        ans.second=max(left.second,right.second)+1;
        if(lefti && righti && diff){
            ans.first= true;
        }
        else{
            ans.first=false;
        }
        return ans;
    }
    //Function to check whether a binary tree is balanced or not.
    bool isBalanced(TreeNode *root)
    {
        return balancefast(root).first;
    }
};

class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        if(root== NULL) return ans;
        queue<pair<Node*,int>>q;
        map<int,int> topnode;
        q.push(make_pair(root,0));
        while(!q.empty()){
            pair<Node*,int> temp=q.front();
            q.pop();
            Node* fnode=temp.first;
            int hdist= temp.second;
            
            if(topnode.find(hdist)==topnode.end()){
                topnode[hdist]=fnode->data;
            }
            if(fnode->left){
                q.push(make_pair(fnode->left,hdist-1));
            }
            if(fnode->right){
                q.push(make_pair(fnode->right,hdist+1));
            }}
            for(auto i:topnode){
                ans.push_back(i.second);
            }
        return ans ;
 
    }
};

long long RecurMemo(int faces, int dice, int target, vector<vector<long long>> &dp){
        // base case
        if (target < 0) return 0;
        if (dice == 0 && target != 0) return 0;
        if (dice != 0 && target == 0) return 0;
        if (dice == 0 && target == 0) return 1;
        if (dp[dice][target] != -1) return dp[dice][target];
        
        long long ans = 0;
        for (int i = 1; i <= faces; i++){
            ans = ans + RecurMemo(faces, dice-1, target-i, dp);
        }
        dp[dice][target] = ans;
        return dp[dice][target];
    }
    long long noOfWays(int M , int N , int X) {
        
        
        vector<vector<long long>> dp(N+1, vector<long long>(X+1, -1));
         return RecurMemo(M, N, X, dp);
    }
};

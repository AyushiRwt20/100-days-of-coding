class Solution {
    private:
    
vector<int> nextSmallerElement(vector<int> &arr, int n)
{stack<int>s;
vector<int>ans(n);
   s.push(-1);
   for(int i=(n-1);i>=0;i--){
       int curr=arr[i];
       while(s.top()!=-1 && arr[s.top()]>=curr){
           s.pop();
       }
       ans[i]=s.top();
       s.push(i);
   }
   return ans;
}

vector<int> nextPreviousElement(vector<int> &arr, int n)
{stack<int>s;
vector<int>ans(n);
   s.push(-1);
   for(int i=0;i<n;i++){
       int curr=arr[i];
       while(s.top()!=-1 && arr[s.top()]>=curr){
           s.pop();
       }
       ans[i]=s.top();
       s.push(i);
   }
   return ans;
}
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int> next(n);
        vector<int> prev(n);
        next=nextSmallerElement(heights,n);
         prev=nextPreviousElement(heights,n);
        int area=INT_MIN;
        for(int i=0;i<n;i++){
            int l=heights[i];
            if(next[i]==-1){
                next[i]=n;
            }
            int b= next[i]-prev[i]-1;
            int narea=l*b;
            area=max(area,narea);
        }  
        return area;  }
};

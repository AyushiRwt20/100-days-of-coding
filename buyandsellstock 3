class Solution {
public:
int solve(int i ,int buy,vector<int>& prices,int lim ,vector<vector<vector<int>>>&dp){
    if(i ==prices.size()) return 0;
    if(lim==0) return 0;
    if(dp[i][buy][lim]!=-1)return dp[i][buy][lim];
    int profit=0;
    if(buy){
        int incl= -prices[i]+solve(i+1,0,prices,lim,dp);
        int excl= 0+solve(i+1,1,prices,lim,dp);
        profit=max(incl,excl);
    }
    else{
        int incl= prices[i]+solve(i+1,1,prices,lim-1,dp);
        int excl= 0+solve(i+1,0,prices,lim,dp);
        profit=max(incl,excl);
    }
    return dp[i][buy][lim]=profit;
}

    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        vector<vector<vector<int>>>dp(n,vector<vector<int>>(2,vector<int>(3,-1)));
        return solve(0,1,prices,2,dp);
    }
};
